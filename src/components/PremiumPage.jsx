import React, { useState, useEffect } from "react";
import axios from "axios";
import { motion } from "framer-motion";
import { toast } from "react-toastify";
import { useNavigate } from "react-router-dom";
import Loading from "./Loading";
import "./styles/PremiumPage.css";

const PremiumPage = ({ user, token, apiUrl }) => {
  const navigate = useNavigate();
  const [subscriptionInfo, setSubscriptionInfo] = useState(null);
  const [loading, setLoading] = useState(true);
  const [accepted, setAccepted] = useState(false);
  const isActive = subscriptionInfo?.active;
  const isCanceled = subscriptionInfo?.canceled;
  const expired =
    subscriptionInfo?.endDate &&
    new Date(subscriptionInfo.endDate) < new Date() &&
    !isActive;

  const fetchSubscription = async () => {
    if (user && token) {
      try {
        const res = await axios.get(`${apiUrl}/api/users/premium-status`, {
          headers: { Authorization: `Bearer ${token}` },
        });
        setSubscriptionInfo(res.data);
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏:", err);
      } finally {
        setLoading(false);
      }
    } else {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchSubscription();
  }, [token, apiUrl]);

  const handlePremiumBuy = async () => {
    if (!token || !user) {
      toast.info("–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É");
      return navigate("/login");
    }

    if (!accepted) {
      toast.warn("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è –æ—Ñ–µ—Ä—Ç—ã –∏ –ø–æ–ª–∏—Ç–∏–∫–∏");
      return;
    }

    try {
      const res = await axios.post(
        `${apiUrl}/api/payments/create-payment`,
        {},
        {
          headers: { Authorization: `Bearer ${token}` },
        }
      );
      const { url, paymentId } = res.data;
      localStorage.setItem("paymentId", paymentId);
      if (url) {
        window.location.href = url;
      } else {
        toast.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É");
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:", err);
      toast.error("–û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏");
    }
  };

  const handleCancelPremium = async () => {
    try {
      await axios.post(`${apiUrl}/api/users/cancel-premium`, null, {
        headers: { Authorization: `Bearer ${token}` },
      });
      toast.info("–ü–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∞ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞");
      setSubscriptionInfo((prev) => ({
        ...prev,
        autoCancel: true,
      }));
      fetchSubscription();
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã:", err);
      toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏");
    }
  };

  const handleRenewPremium = async () => {
    try {
      await axios.post(`${apiUrl}/api/users/renew-premium`, null, {
        headers: { Authorization: `Bearer ${token}` },
      });
      toast.success("–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤–æ–∑–æ–±–Ω–æ–≤–µ–Ω–æ");
      setSubscriptionInfo((prev) => ({
        ...prev,
        autoCancel: false,
      }));
      fetchSubscription();
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏", err);
      toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏");
    }
  };

  return (
    <div className="premium-page-container">
      <motion.div
        initial={{ opacity: 0, scale: 0.95 }}
        animate={{ opacity: 1, scale: 1 }}
        exit={{ opacity: 0, scale: 1.05 }}
        transition={{ duration: 0.6 }}
      >
        {loading ? (
          <Loading />
        ) : (
          <div className="cards-container">
            <div className="premium-card">
              {/* –•–µ–¥–µ—Ä –∫–∞—Ä—Ç—ã */}
              <div className="premium-header">
                üåü LearningPortal Premium ‚Äì 1 –º–µ—Å—è—Ü
              </div>

              {/* –ò–Ω—Ñ–æ–±–ª–æ–∫ –æ –ø–æ–¥–ø–∏—Å–∫–µ */}
              {isActive ? (
                <div
                  className={`self-subscription-info ${
                    isCanceled ? "canceled" : ""
                  } ${expired ? "expired" : ""}`}
                >
                  <p className="premium-status">
                    ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ (99 ‚ÇΩ/–º–µ—Å)
                  </p>
                  <p>
                    –°:{" "}
                    {new Date(subscriptionInfo.startDate).toLocaleDateString()}
                  </p>
                  <p>
                    –î–æ:{" "}
                    {new Date(subscriptionInfo.endDate).toLocaleDateString()}
                  </p>

                  {isCanceled ? (
                    <>
                      <p className="auto-cancel-label">
                        üîï –ü—Ä–æ–¥–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ
                      </p>
                      <button onClick={handleRenewPremium}>
                        –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
                      </button>
                    </>
                  ) : (
                    <button onClick={handleCancelPremium}>
                      –û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–¥–ª–µ–Ω–∏–µ
                    </button>
                  )}
                </div>
              ) : expired ? (
                <div className="self-subscription-info">
                  <p className="expired-label">‚è∞ –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞</p>
                  <button onClick={handlePremiumBuy}>–ü—Ä–æ–¥–ª–∏—Ç—å</button>
                </div>
              ) : (
                <div className="buy-container">
                  <label className="accept-terms">
                    <input
                      type="checkbox"
                      checked={accepted}
                      onChange={() => setAccepted(!accepted)}
                    />
                    –Ø –ø—Ä–∏–Ω–∏–º–∞—é <a href="/policy">—É—Å–ª–æ–≤–∏—è –æ—Ñ–µ—Ä—Ç—ã –∏ –ø–æ–ª–∏—Ç–∏–∫–∏</a>
                  </label>
                  <button
                    disabled={!accepted || loading}
                    onClick={handlePremiumBuy}
                    style={{
                      cursor: accepted && !loading ? "pointer" : "default",
                      opacity: accepted ? 1 : 0.6,
                    }}
                  >
                    {loading ? "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ..." : "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞ 99 ‚ÇΩ/–º–µ—Å"}
                  </button>
                </div>
              )}

              {/* –°–ø–∏—Å–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ */}
              <div className="subscription-info-container">
                <p>
                  –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º üéÅ
                </p>
                <ul className="benefits-list">
                  <li style={{ color: "red" }}>üöß –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</li>
                  <li>üìà –ì—Ä–∞—Ñ–∏–∫–∏ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏</li>
                  <li>üìä –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</li>
                  <li>üé® –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ</li>
                </ul>
              </div>

              <div className="disclaimer">
                <small>
                  –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã. –í–æ–∑–≤—Ä–∞—Ç –≤–æ–∑–º–æ–∂–µ–Ω
                  —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–±–æ—è—Ö, –ø–æ –æ–±—Ä–∞—â–µ–Ω–∏—é –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.
                </small>
              </div>
            </div>
          </div>
        )}
      </motion.div>
    </div>
  );
};

export default PremiumPage;
